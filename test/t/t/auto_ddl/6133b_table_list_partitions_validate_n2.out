SELECT pg_sleep(1);--to ensure all objects are replicated
 pg_sleep 
----------
 
(1 row)

--This file will run on n2 and validate all the replicated tables data, structure and replication sets they're in
SET ROLE appuser;
SET
SET search_path TO s613, public;
SET
\d+ sales_list_east
                                         Table "s613.sales_list_east"
   Column    |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
-------------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 sale_id     | integer |           | not null |         | plain    |             |              | 
 sale_region | text    |           | not null |         | extended |             |              | 
 sale_amount | numeric |           |          |         | main     |             |              | 
Partition of: sales_list FOR VALUES IN ('East')
Partition constraint: ((sale_region IS NOT NULL) AND (sale_region = 'East'::text))
Indexes:
    "sales_list_east_pkey" PRIMARY KEY, btree (sale_id, sale_region)
Access method: heap

\d+ sales_list_west
                                         Table "s613.sales_list_west"
   Column    |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
-------------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 sale_id     | integer |           | not null |         | plain    |             |              | 
 sale_region | text    |           | not null |         | extended |             |              | 
 sale_amount | numeric |           |          |         | main     |             |              | 
Partition of: sales_list FOR VALUES IN ('West')
Partition constraint: ((sale_region IS NOT NULL) AND (sale_region = 'West'::text))
Indexes:
    "sales_list_west_pkey" PRIMARY KEY, btree (sale_id, sale_region)
Access method: heap

\d+ sales_list_north
                                        Table "s613.sales_list_north"
   Column    |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
-------------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 sale_id     | integer |           | not null |         | plain    |             |              | 
 sale_region | text    |           | not null |         | extended |             |              | 
 sale_amount | numeric |           |          |         | main     |             |              | 
Partition of: sales_list FOR VALUES IN ('North')
Partition constraint: ((sale_region IS NOT NULL) AND (sale_region = 'North'::text))
Indexes:
    "sales_list_north_pkey" PRIMARY KEY, btree (sale_id, sale_region)
Access method: heap

\d+ sales_list
                                     Partitioned table "s613.sales_list"
   Column    |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
-------------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 sale_id     | integer |           | not null |         | plain    |             |              | 
 sale_region | text    |           | not null |         | extended |             |              | 
 sale_amount | numeric |           |          |         | main     |             |              | 
Partition key: LIST (sale_region)
Indexes:
    "sales_list_pkey" PRIMARY KEY, btree (sale_id, sale_region)
Partitions: sales_list_east FOR VALUES IN ('East'),
            sales_list_north FOR VALUES IN ('North'),
            sales_list_west FOR VALUES IN ('West')

SELECT * FROM get_table_repset_info('sales_list'); -- Expect the new partition to be listed
 nspname |     relname      | set_name 
---------+------------------+----------
 s613    | sales_list       | default
 s613    | sales_list_east  | default
 s613    | sales_list_west  | default
 s613    | sales_list_north | default
(4 rows)

SELECT * FROM sales_list ORDER BY sale_id; -- Expect 4 rows
 sale_id | sale_region | sale_amount 
---------+-------------+-------------
       1 | East        |       100.0
       2 | West        |       200.0
       3 | East        |       150.0
       4 | North       |       250.0
(4 rows)

--exercise ddl on n2
DROP TABLE sales_list CASCADE;
NOTICE:  drop cascades to table sales_list_north membership in replication set default
NOTICE:  drop cascades to table sales_list_west membership in replication set default
NOTICE:  drop cascades to table sales_list_east membership in replication set default
NOTICE:  drop cascades to table sales_list membership in replication set default
INFO:  DDL statement replicated.
DROP TABLE
\d+ products_list
                                      Partitioned table "s613.products_list"
      Column      |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
------------------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 product_id       | integer |           | not null |         | plain    |             |              | 
 product_category | text    |           | not null |         | extended |             |              | 
 product_name     | text    |           |          |         | extended |             |              | 
Partition key: LIST (product_category)
Indexes:
    "products_list_pkey" PRIMARY KEY, btree (product_id, product_category)
Partitions: products_list_clothing FOR VALUES IN ('Clothing'),
            products_list_electronics FOR VALUES IN ('Electronics')

\d+ products_list_clothing
                                        Table "s613.products_list_clothing"
      Column      |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
------------------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 product_id       | integer |           | not null |         | plain    |             |              | 
 product_category | text    |           | not null |         | extended |             |              | 
 product_name     | text    |           |          |         | extended |             |              | 
Partition of: products_list FOR VALUES IN ('Clothing')
Partition constraint: ((product_category IS NOT NULL) AND (product_category = 'Clothing'::text))
Indexes:
    "products_list_clothing_pkey" PRIMARY KEY, btree (product_id, product_category)
Access method: heap

\d+ products_list_electronics
                                      Table "s613.products_list_electronics"
      Column      |  Type   | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
------------------+---------+-----------+----------+---------+----------+-------------+--------------+-------------
 product_id       | integer |           | not null |         | plain    |             |              | 
 product_category | text    |           | not null |         | extended |             |              | 
 product_name     | text    |           |          |         | extended |             |              | 
Partition of: products_list FOR VALUES IN ('Electronics')
Partition constraint: ((product_category IS NOT NULL) AND (product_category = 'Electronics'::text))
Indexes:
    "products_list_electronics_pkey" PRIMARY KEY, btree (product_id, product_category)
Access method: heap

SELECT * FROM get_table_repset_info('products_list'); -- Expect all to be in default repset
 nspname |          relname          | set_name 
---------+---------------------------+----------
 s613    | products_list             | default
 s613    | products_list_electronics | default
 s613    | products_list_clothing    | default
(3 rows)

SELECT * FROM products_list ORDER BY product_id; -- Expect 3 rows
 product_id | product_category | product_name 
------------+------------------+--------------
          1 | Electronics      | Laptop
          2 | Clothing         | Shirt
          3 | Electronics      | Smartphone
(3 rows)

--exercise ddl on n2
DROP TABLE products_list CASCADE;
NOTICE:  drop cascades to table products_list_clothing membership in replication set default
NOTICE:  drop cascades to table products_list_electronics membership in replication set default
NOTICE:  drop cascades to table products_list membership in replication set default
INFO:  DDL statement replicated.
DROP TABLE
